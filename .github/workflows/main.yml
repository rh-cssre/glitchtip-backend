name: 'get commits from upstream'

on:
  schedule:
    - cron: '0 0 * * 1' # run every monday
  workflow_dispatch:

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        ref:  master

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: vinaybommana/Fork-Sync-With-Upstream-action@v1.0
      with:
        target_sync_branch: master
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: master
        upstream_sync_repo: https://gitlab.com/glitchtip/glitchtip-backend.git

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false

    - name: Create Pull Request if new commits are present
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const date = new Date()
          const result = await github.rest.pulls.create({
            title: [
              '[UPSTREAM CHANGES] latest changes as of ',
              date
            ].join('\n'),
            owner,
            repo,
            head: 'upstream-changes',
            base: 'master',
            body: [
              'This PR is auto-generated by',
              '[actions/github-script](https://github.com/actions/github-script).'
            ].join('\n')
          });
